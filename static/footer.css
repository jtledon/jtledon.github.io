*, *::before, *::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
    font-family: 'Nunito', sans-serif;
}

li {
    list-style: none;
}

.contact_info {
    display: flex;
    flex-direction: column;
    /* justify-content: center; */
    align-content: center;
    align-items: center;
    
    flex-wrap: wrap;
}

.contact_info h2 {
    /* margin-bottom: 0.75em; */
}

.wrapper {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.contact_info_item {
    text-align: center;
    white-space: nowrap;

    /* FIXME: for whatever reason, the spacing is based off the size of the 
     * image, PRIOR to scaling the images and text down. So the divs are 
     * really large because of the massive pictures and text. That's why 
     * they are spaced so far apart*/
    /* transform: scale(0.125); */
    transform: scale(0.85);

    margin: 0em 1em 0em 1em;
    transition: transform 125ms ease-in-out,
                margin 125ms ease-in-out;
}

.contact_info_item:hover, 
.contact_info_item:focus {
    /* transform: scale(0.175); */
    transform: scale(1);
    opacity: 0.75;
    cursor: pointer;
} 

.contact_info_image {
    display: block;
}

.image_container {
    display: inline-block; /* the wrapper div should only be as large as its contents */
    position: relative; /* we want the ::after to be relative to this div, for easy positioning */
    /* margin: 0em 1em 0em 1em; */
    /* transition: margin 125ms ease-in-out; */
}
/* pseudo elements don't work on images so I need to wrap it in a div*/
.image_container::before {
    content: ""; /* always need to give pseudo elements a content property */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 150% 150% 0 0;
    border-radius: 50%;
    background: #ddd;
    z-index: -1; /* this wont work without having a position relative and absolute */
}

.image_container::after {
    opacity: 0;
    position: absolute;
    bottom: -3vh;
    left: 50%;
    transform: translate(-50%, 0%);
    transition: opacity 125ms ease-in-out;
}

/* Specify what the text says under the icon */
/* Do this in a pseudo element so that the div doesn't take into account the spacing of the text when calculating padding */
#phone::after {
    content: "(786) 702-8193"
}
#email::after {
    content: "jtledon@gmail.com"
}
#linkedin::after {
    content: "www.linkedin.com/in/jtledon"
}
#github::after {
    content: "https://github.com/jtledon"
}

.contact_info_item:hover, 
.contact_info_item:focus {
    margin: 0em 3em 0em 3em;
}
/* .image_container:hover::after, 
.image_container:focus::after {
    opacity: 1;
} */

.contact_info_item:hover .image_container::after,
.contact_info_item:focus .image_container::after {
    opacity: 1;
}


/* We want the details to not show by default, and show on hover of the entire element */
.contact_info_details {
    opacity: 0;
    transition: opacity 125ms ease-in-out;
    font-size: 1em;
}

/* When hovering over the entire contact_info_items, we want to show the text */
.contact_info_item:hover .contact_info_details, 
.contact_info_item:focus .contact_info_details {
    opacity: 1;
}













body {
    margin-bottom: 120px; /* needs to be the size of the footer so it doesn't cover any content when it reaches the bottom */
}

/* starting footer testing */
.footer {
    margin-top: 50px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    align-items: center;
    align-content: center;
    justify-content: space-evenly;
    justify-items: center;

    position: fixed; /* stays in the same location even when scrolling */
    /* use STICKY for headers. They start relative, and then scroll with the top of the page */
    bottom: 0;
    width: 100%;
    height: 120px;
    background: #999;
}

.blah {
    font-size: 3em;
}